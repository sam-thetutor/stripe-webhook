type Transaction = 
 record {
   destinationAddress: text;
   destinationCanisterId: text;
   error: opt text;
   fromAmount: opt text;
   isPaid: bool;
   paymentLinkId: text;
   price: opt text;
   slippage: opt text;
   swapTxId: opt text;
   toAmount: opt text;
   tokenAmount: text;
   tokenSymbol: text;
   usdAmount: text;
 };
type StorageCanister = 
 service {
   checkPaymentStatus: (text) -> (bool);
   getAllTransactions: () -> (vec record {
                                    text;
                                    Transaction;
                                  });
   getTransaction: (text) -> (opt Transaction);
   storeTransaction: (Transaction) -> (bool);
   updateTransaction: (text, Transaction) -> (bool);
 };
service : () -> StorageCanister
